import numpy as np
import math
from sympy import Point
from Roadnet_component.Intersection import Intersection

# The origin enter time of flows get from real-world
enter_time = [
    22, 1649, 3702, 3120, 6033, 6765, 7382, 7417, 5716, 875, 4871, 7789, 8573, 5498, 11060, 7158, 11673, 11525, 13858, 14042, 14055, 13641, 14174, 13065, 11021, 16752, 21276, 19435, 516, 23169, 23235, 24852, 24046, 25295, 26660, 25235, 24821, 27645, 25590, 25170, 0, 25992, 27343, 27499, 27564, 28406, 27468, 27566, 28915, 29909, 27548, 29346, 29304, 28702, 28467, 29172, 30629, 31085, 31331, 31126, 31779, 32610, 26735, 32152, 32689, 32342, 33468, 31309, 28580, 33581, 34805, 32708, 31889, 32604, 27661, 30655, 33029, 32720, 28171, 32983, 34735, 24034, 32622, 31458, 35873, 34244, 36025, 29829, 34013, 31686, 33143, 31596, 36900, 32462, 32401, 34613, 35740, 35658, 36120, 35095, 34025, 35326, 37275, 37900, 34613, 34539, 35395, 37284, 35737, 35520, 34126, 31319, 36726, 38373, 38294, 34770, 35450, 39493, 37934, 36823, 40325, 40870, 38425, 34367, 38075, 42205, 43261, 42843, 43400, 41505, 41957, 42528, 41917, 39726, 43693, 43216, 40789, 42524, 40979, 42378, 45037, 43821, 46041, 42728, 38428, 36106, 41357, 44212, 46279, 47382, 40380, 45732, 41479, 45371, 45108, 42685, 40493, 44980, 36260, 44562, 43318, 43139, 46613, 44533, 41241, 46180, 47850, 42940, 48557, 47322, 49158, 39477, 50497, 48490, 50211, 50621, 50130, 48878, 44769, 45272, 52193, 51989, 50219, 50156, 50543, 53357, 48648, 52205, 46819, 50951, 52569, 51672, 53004, 54474, 42118, 53841, 49167, 52079, 53980, 53190, 51867, 52000, 53502, 52767, 50803, 51825, 53985, 53645, 54547, 53088, 54364, 54734, 53946, 55113, 52879, 53825, 56302, 55460, 54613, 54404, 55846, 57611, 53998, 53136, 57528, 51911, 58724, 59776, 56635, 56818, 56048, 57909, 56814, 58323, 54099, 56170, 45027, 58119, 57365, 54029, 57578, 59742, 58834, 57280, 56754, 60894, 55995, 59154, 59947, 60175, 57516, 57874, 59127, 60654, 61713, 58777, 62503, 62808, 63401, 60209, 61036, 64852, 55737, 55589, 63948, 58217, 63290, 60369, 63563, 64362, 66745, 67797, 63963, 63771, 63666, 61148, 63123, 69697, 67674, 66299, 61796, 67989, 70157, 17367, 67604, 71098, 71126, 71779, 68026, 70300, 70479, 72892, 74064, 70467, 71067, 68103, 74968, 75518, 71584, 76377, 75308, 73008, 76655, 75979, 71894, 65292, 76281, 70990, 77062, 73949, 77540, 75712, 75503, 79629, 68981, 77829, 76736, 76319, 62033, 78205, 77390, 76529, 82425, 80011, 79161, 79773, 81334, 80569, 78834, 83340, 77682, 80689, 85447, 84495, 82377, 84733, 86024, 81422, 84854, 84339, 83747, 82543, 85279, 84450, 83488, 86066, 87884, 89897, 88226, 87818, 85170]
# Shrink the enter_time to fit with our experiment time period
shrink_ratio = 20
enter_time = [int(enter_time[i]/shrink_ratio) for i in range(len(enter_time))]


class Flow:
    def __init__(self, node2coord, i, x_o, y_o, x_d, y_d):
        self.node2coord = node2coord
        self.iid = i
        self.origin = Point(x_o, y_o)
        self.origin_inter_iid = self.fit_od_to_inter(self.origin)
        self.des = Point(x_d, y_d)
        self.des_inter_iid = self.fit_od_to_inter(self.des)
        self.start_inter, self.end_inter = Intersection(0, Point(0, 0)),  Intersection(0, Point(0, 0))
        self.startTime = enter_time[i]
        self.endTime = enter_time[i]
        self.route = []

    def fit_od_to_inter(self, coord):
        distance = []
        for i, node in enumerate(self.node2coord.values()):
            d = math.sqrt(pow(coord.y - node[1], 2) + pow(coord.x - node[0], 2))
            distance.append(d)
            # print(distance)
        index = np.asarray(distance).argsort()
        # print(distance)
        # print("flow %d is fitted to intersection %d!" %(self.iid, index[0]))
        return index[0]
